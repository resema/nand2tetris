/** Directory class for DosBox */

class Directory {
  field String _name;
  field Directory _previous;
  
  field Array _directories;
  field int _amountOfDirectories;
  
  field Array _files;
  field int _amountOfFiles;
  
  constructor Directory new(String name) {
    let _name = name;
    let _amountOfDirectories = 0;
    return this;
  }
  
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }
  
  method Directory getPrevious() { return _previous; }
  method void setPrevious(Directory prev) { 
    let _previous = prev; 
    return; 
  }
  
  method String getName() { return _name; }
  method int getNumberOfChildDirectories() { return _amountOfDirectories; }

  
  method void addDirectory(Directory dir) {
    var int idx;
    let idx = _amountOfDirectories;
    let _amountOfDirectories = _amountOfDirectories + 1;
    let _directories = ArrayExt.extend(_directories, _amountOfDirectories);
    do dir.setPrevious(this);
    let _directories[idx] = dir;
    return; 
  }
  
  method Directory enterDirectory(String name) {
    var int idx;
    var Directory tmp, ret;
    var boolean checkEquality;
    let idx = 0;
    let ret = null;
    while (idx < _amountOfDirectories) {
      let tmp = _directories[idx];
      let checkEquality = StringExt.equals(name, tmp.getName());
      if (checkEquality) {
        let ret = tmp;
      }
      let idx = idx + 1;
    }
    return ret;
  }
  
  method Directory leaveDirectory(String name) {
    return _previous;
  }
  
  method void print() {
    var Directory dirName;
    var int i;
    let i = 0;
    while (i < _amountOfDirectories) {
      let dirName = _directories[i];
      do Output.printString(dirName.getName());
      do Output.printChar(String.newLine());
      let i = i + 1;
    }
    return;
  }
}