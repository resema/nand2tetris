/** Inventory class for DosBox containing Files and Directories*/

class Inventory {
  field String _name;
  field int _depth;
  field Directory _root, _current;
    
  constructor Inventory new(String name) {
    let _name = name;
    let _depth = 0; //root = 0
    
    let _root = Directory.new(name);
    do _root.setPrevious(null);
    let _current = _root;
    
    return this;
  }
  
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }
  
  /** Accessors */
  method String getName() { 
    var String ret, tmp;
    var Directory previous;
    let previous = _current.getPrevious();
    let ret = _current.getName();
    let ret = StringExt.appendString(ret, "/");
    while (~(previous = null)) {
      let tmp = StringExt.appendString(previous.getName(), "/");
      let ret = StringExt.appendString(tmp, ret);
      let previous = previous.getPrevious();
    }
    return ret; 
  }
  
  method void checkInput(String cmd) {
    var String name;
    var Directory tmp, dir;
    if (cmd.length() = 3) {
      // "dir"
      if (cmd.charAt(0) = 68 & cmd.charAt(1) = 73 & cmd.charAt(2) = 82) {
        do printDirectories();
      }        
    }
    if (~(cmd.length() < 2)) {
      // "ls"
      if (cmd.charAt(0) = 76 & cmd.charAt(1) = 83) {
        do printDirectories();
      }
      // "mk"
      if (cmd.charAt(0) = 77 & cmd.charAt(1) = 75) {
        if (cmd.length() > 3) {
          let name = StringExt.eraseFirstChars(cmd, 3);
          let dir = Directory.new(name);
          do _current.addDirectory(dir);
        }
      }
      // "cd"
      if (cmd.charAt(0) = 67 & cmd.charAt(1) = 68) {
        if (cmd.length() > 3) {
          let name = StringExt.eraseFirstChars(cmd, 3);
          if (name.charAt(0) = 46) {
            if (name.charAt(1) = 46) {
              let _current = _current.leaveDirectory(name);
            }
          }
          if (~(name.charAt(0) = 46)) {
            let tmp = _current.enterDirectory(name);
            if (~(tmp = null)) {
              let _current = tmp;
            }
          }
        }
      }
    }
    
    return;
  }
  
  method void printDirectories() {
    do _current.print();
    return;
  }
  
  // method void openDirectory(String name) {
    // var int childs;
    // let childs = _current.getNumberOfChildDirectories();
    // if ( childs > 0) {
      // do Output.printString("juhuu");
    // }
    // return;
  // }
  
  // method void createDirectory(String name) {
    // var Directory _testDir;
    // let _testDir = Directory.new(name);
    // let _directories[0] = _testDir;
    // let _amountOfDirectories = 1;
    // return;
  // }
  

}