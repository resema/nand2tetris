// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
  
    static Array KEYBOARD;
    static char MAXSTR;
  
    /** Initializes the keyboard. */
    function void init() {
      let KEYBOARD = 24576;
      let MAXSTR = 256;
      return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      var char input;
      let input = Memory.peek(KEYBOARD);
      return input;  
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
      var char input;
      while (Keyboard.keyPressed() = 0) {}
      let input = Keyboard.keyPressed();
      while (~(Keyboard.keyPressed() = 0)) {}
      do Output.printChar(input);
      return input;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
      var char input;
      var String line;
      let line = String.new(MAXSTR);
      
      do Output.printString(message);
      
      let input = Keyboard.readChar();
      while (~(input = String.newLine())) {         // new line
        if (input = String.backSpace()) {
          do Output.backSpace();                    // remove black square
          do Output.backSpace();
          do line.eraseLastChar();  
        }
        else {
          do line.appendChar(input);
        }
        let input = Keyboard.readChar();
      }
      return line;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
      var String line;
      let line = Keyboard.readLine(message);
      return line.intValue();
    }
}

