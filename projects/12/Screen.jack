// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 512 rows (indexed 0..511, top to bottom)
 * of 256 pixels each (indexed 0..255, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
  
    static Array SCREEN;
    static bool isBlack;

    /** Initializes the Screen. */
    function void init() {
      let SCREEN = 16384;
      return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
      var int addr, lastAddr;
      let addr = 0;
      let lastAddr = SCREEN + 8192;
      
      while (addr < lastAddr) {
        do Memory.poke(addr, 0);
        let addr = addr + 1;
      }
      
      return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
      let isBlack = b;
      return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
      var int address, value, bit, mask;
      let address = (32*y)+(x/16);
      let value = Memory.peek(SCREEN + address);
   
      /** set the (x%16)th bit of value to the current color */
      let bit = Math.mod(x, 16);
      let mask = Math.getTwoToThe(bit);
      
      if (isBlack = true) {
        let mask = value | mask;
      }
      else {
        let mask = value & masK
      }
      do Memory.poke(SCREEN + address, mask);
      return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
      return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
      return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
      return;
    }
}










